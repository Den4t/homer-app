{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Homer-App User interface for WEB AI",
    "title": "Homer-App",
    "contact": {
      "name": "Aqs",
      "email": "aqsyounas@gmail.com"
    },
    "license": {
      "name": "AGPL",
      "url": "https://www.gnu.org/licenses/agpl-3.0.en.html"
    },
    "version": "1.1.2"
  },
  "host": "207.38.65.199:9080",
  "basePath": "/api/v3",
  "paths": {
    "/Hepsubsearch/protocol": {
      "post": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get mappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Hepsubsearch"
        ],
        "operationId": "AddHepsubsearch",
        "responses": {}
      }
    },
    "/admin/profiles": {
      "get": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get mappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "profile"
        ],
        "operationId": "ListProfiles",
        "responses": {}
      }
    },
    "/advanced": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns advanced setting of user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "advanced"
        ],
        "operationId": "ListAdvancedSettings",
        "responses": {}
      }
    },
    "/advanced/protocol": {
      "post": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get mappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "ListAdvancedSettings",
        "responses": {}
      }
    },
    "/agent/search/{guid}/{type}": {
      "post": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get mappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "agent"
        ],
        "operationId": "CreateAgent",
        "responses": {}
      }
    },
    "/agent/subscribe": {
      "get": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get agent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "agent"
        ],
        "operationId": "ListAgents",
        "responses": {}
      }
    },
    "/agent/subscribe/{guid}": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Get agent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "agent"
        ],
        "operationId": "GetAgentByGUID",
        "parameters": [
          {
            "type": "string",
            "example": "eacdae5b-4203-40a2-b388-969312ffcffe",
            "description": "guid of agent",
            "name": "type of agent",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Get mappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "agent"
        ],
        "operationId": "DeleteAgent",
        "parameters": [
          {
            "type": "string",
            "example": "eacdae5b-4203-40a2-b388-969312ffcffe",
            "description": "guid of agent",
            "name": "type of agent",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      }
    },
    "/agent/type/{type}": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Get agent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "agent"
        ],
        "operationId": "GetAgentByType",
        "parameters": [
          {
            "type": "string",
            "example": "home",
            "description": "type of agent",
            "name": "type of agent",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      }
    },
    "/agentsub/protocol": {
      "post": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get mappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "agent"
        ],
        "operationId": "AddAgentsub",
        "responses": {}
      }
    },
    "/alias": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns the list of Users",
        "produces": [
          "application/json"
        ],
        "tags": [
          "alias"
        ],
        "operationId": "ListAlias",
        "responses": {}
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Adds alias to system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "alias"
        ],
        "operationId": "AddAlias",
        "parameters": [
          {
            "description": "alias parameters",
            "name": "aliasstruct",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AliasStruct"
            }
          }
        ],
        "responses": {}
      }
    },
    "/alias/{guid}": {
      "put": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Update an existing user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "alias"
        ],
        "operationId": "UpdateAlias",
        "parameters": [
          {
            "type": "string",
            "example": "11111111-1111-1111-1111-111111111111",
            "description": "uuid of the alias to update",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "area parameters",
            "name": "area",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AliasStruct"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Update an existing user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "alias"
        ],
        "operationId": "DeleteAlias",
        "parameters": [
          {
            "type": "string",
            "example": "11111111-1111-1111-1111-111111111111",
            "description": "uuid of the alias to delete",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      }
    },
    "/api/call/report/log": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns logs related to transaction",
        "produces": [
          "application/json"
        ],
        "operationId": "search",
        "responses": {}
      }
    },
    "/api/call/report/qos": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns qos stats",
        "produces": [
          "application/json"
        ],
        "operationId": "search",
        "responses": {}
      }
    },
    "/api/call/transaction": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns data related to transaction",
        "produces": [
          "application/json"
        ],
        "operationId": "search",
        "responses": {}
      }
    },
    "/api/prometheus/data": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns data based upon filtered json",
        "produces": [
          "application/json"
        ],
        "operationId": "search"
      }
    },
    "/api/prometheus/label": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns data based upon filtered json",
        "produces": [
          "application/json"
        ],
        "operationId": "search"
      }
    },
    "/api/prometheus/labels": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns data based upon filtered json",
        "produces": [
          "application/json"
        ],
        "operationId": "search"
      }
    },
    "/api/prometheus/value": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns data based upon filtered json",
        "produces": [
          "application/json"
        ],
        "operationId": "search"
      }
    },
    "/api/search/call/data": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns data based upon filtered json",
        "produces": [
          "application/json"
        ],
        "operationId": "search",
        "responses": {}
      }
    },
    "/api/search/call/decode/message": {
      "post": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns data based upon filtered json",
        "produces": [
          "application/json"
        ],
        "operationId": "search",
        "responses": {}
      }
    },
    "/api/search/call/message": {
      "post": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns data based upon filtered json",
        "produces": [
          "application/json"
        ],
        "operationId": "search",
        "responses": {}
      }
    },
    "/api/statistic/data": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns data based upon filtered json",
        "produces": [
          "application/json"
        ],
        "operationId": "search"
      }
    },
    "/api/v3/export/call/messages/pcap": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns messages related to transaction",
        "produces": [
          "application/json"
        ],
        "operationId": "search",
        "responses": {}
      }
    },
    "/api/v3/export/call/messages/text": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns messages related to transaction",
        "produces": [
          "application/json"
        ],
        "operationId": "search",
        "responses": {}
      }
    },
    "/api/v3/seach/remote/data": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns data based upon filtered json",
        "produces": [
          "application/json"
        ],
        "operationId": "search"
      }
    },
    "/api/v3/seach/remote/label": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns data based upon filtered json",
        "produces": [
          "application/json"
        ],
        "operationId": "search"
      }
    },
    "/api/v3/seach/remote/values": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns data based upon filtered json",
        "produces": [
          "application/json"
        ],
        "operationId": "search"
      }
    },
    "/auth": {
      "post": {
        "description": "Returns a JWT Token and UUID attached to user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "operationId": "userLogin",
        "parameters": [
          {
            "description": "user login structure",
            "name": "userLoginStruct",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {}
      }
    },
    "/dashboard/info": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Get Dashbroad list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "dashboard"
        ],
        "operationId": "ListDashboard",
        "responses": {}
      }
    },
    "/dashboard/store/{dashboardId}": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Get Dashboard Against a GUID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "dashboard"
        ],
        "operationId": "GetDashboard",
        "parameters": [
          {
            "type": "string",
            "example": "home",
            "description": "param of dashboard",
            "name": "dashboard id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Add new dashboard",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "dashboard"
        ],
        "operationId": "CreateDashboard",
        "parameters": [
          {
            "type": "string",
            "example": "home",
            "description": "the param of dashboard",
            "name": "dashboardid",
            "in": "path",
            "required": true
          },
          {
            "description": "json of dashboard",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserSettings"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Delete a dashboard",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "dashboard"
        ],
        "operationId": "DeleteDashboard",
        "parameters": [
          {
            "type": "string",
            "example": "home",
            "description": "the param of dashboard",
            "name": "param",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      }
    },
    "/database/node/list": {
      "get": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get mappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "profile"
        ],
        "operationId": "ListMapping",
        "responses": {}
      }
    },
    "/hepsub/protocol": {
      "get": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get HepSub",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hepsub"
        ],
        "operationId": "ListHepsub",
        "responses": {}
      },
      "post": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get mappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Mapping"
        ],
        "operationId": "AddMapping",
        "responses": {}
      }
    },
    "/mapping/protocol": {
      "get": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get mappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "profile"
        ],
        "operationId": "ListProfiles",
        "responses": {}
      }
    },
    "/mapping/protocol/{guid}": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Get mapping against id and profile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Mapping"
        ],
        "operationId": "GetMapping",
        "parameters": [
          {
            "type": "string",
            "example": "11111111-1111-1111-1111-111111111111",
            "description": "guid of mapping",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Get mapping against id and profile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Mapping"
        ],
        "operationId": "DeleteMapping",
        "parameters": [
          {
            "type": "string",
            "example": "11111111-1111-1111-1111-111111111111",
            "description": "guid of mapping",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      }
    },
    "/mapping/protocol/{id}/{transaction}": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Get mapping against id and profile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Mapping"
        ],
        "operationId": "GetMapping",
        "parameters": [
          {
            "type": "string",
            "example": "call",
            "description": "profile",
            "name": "transaction",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      }
    },
    "/mapping/protocols": {
      "get": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get mappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Mapping"
        ],
        "operationId": "ListMapping",
        "responses": {}
      }
    },
    "/token/auth": {
      "get": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get mappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "token"
        ],
        "operationId": "GetToken",
        "responses": {}
      },
      "post": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get mappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "token"
        ],
        "operationId": "AddAuthToken",
        "responses": {}
      }
    },
    "/token/auth/:guid": {
      "delete": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get mappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "token"
        ],
        "operationId": "DeleteToken",
        "responses": {}
      }
    },
    "/token/auth/{guid}": {
      "get": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get mappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "token"
        ],
        "operationId": "GetTokenAgainstGUID",
        "responses": {}
      },
      "put": {
        "security": [
          {
            "bearer": [
              "[]"
            ]
          },
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Get mappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "token"
        ],
        "operationId": "UpdateToken",
        "responses": {}
      }
    },
    "/user/settings": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns the list of settings",
        "produces": [
          "application/json"
        ],
        "tags": [
          "settings"
        ],
        "operationId": "ListSettings",
        "responses": {}
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "SecurityDefinitions": []
          },
          {
            "bearer": []
          },
          {
            "type": [
              "apiKey"
            ]
          },
          {
            "name": [
              "Authorization"
            ]
          },
          {
            "in": [
              "header"
            ]
          }
        ],
        "description": "Returns the list of Users",
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "operationId": "ListUsers",
        "responses": {}
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Create a New user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "operationId": "CreateUser",
        "parameters": [
          {
            "description": "user structure",
            "name": "userstruct",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserStruct"
            }
          }
        ],
        "responses": {}
      }
    },
    "/users/{userGuid}": {
      "put": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Update an existing user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "operationId": "UpdateUser",
        "parameters": [
          {
            "type": "string",
            "example": "11111111-1111-1111-1111-111111111111",
            "description": "uuid of the user to update",
            "name": "userGuid",
            "in": "path",
            "required": true
          },
          {
            "description": "area parameters",
            "name": "area",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserStruct"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "description": "Delete an existing User",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "operationId": "DeleteUser",
        "parameters": [
          {
            "type": "string",
            "example": "11111111-1111-1111-1111-111111111111",
            "description": "uuid of the user to update",
            "name": "userGuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      }
    }
  },
  "definitions": {
    "AgentsLocation": {
      "type": "object",
      "properties": {
        "active": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Active"
        },
        "create_date": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreateDate"
        },
        "expire_date": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "ExpireDate"
        },
        "gid": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Gid"
        },
        "host": {
          "type": "string",
          "x-go-name": "Host"
        },
        "node": {
          "type": "string",
          "x-go-name": "Node"
        },
        "path": {
          "type": "string",
          "x-go-name": "Path"
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Port"
        },
        "protocol": {
          "type": "string",
          "x-go-name": "Protocol"
        },
        "ttl": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TTL"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        },
        "uuid": {
          "type": "string",
          "x-go-name": "GUID"
        }
      },
      "x-go-name": "TableAgentLocationSession",
      "x-go-package": "github.com/sipcapture/homer-app/model"
    },
    "AliasStruct": {
      "type": "object",
      "required": [
        "alias",
        "ip",
        "port",
        "mask",
        "captureID"
      ],
      "properties": {
        "alias": {
          "description": "alias name",
          "type": "string",
          "x-go-name": "Alias",
          "example": "verizon"
        },
        "captureID": {
          "type": "string",
          "x-go-name": "CaptureID",
          "example": "0"
        },
        "guid": {
          "type": "string",
          "x-go-name": "GUID"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "ip": {
          "type": "string",
          "x-go-name": "IP",
          "example": "192.168.10.20"
        },
        "mask": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Mask",
          "example": 32
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Port",
          "example": 5060
        },
        "status": {
          "type": "boolean",
          "x-go-name": "Status"
        }
      },
      "x-go-name": "TableAlias",
      "x-go-package": "github.com/sipcapture/homer-app/model"
    },
    "CreateUserStruct": {
      "type": "object",
      "required": [
        "username",
        "partid",
        "email",
        "password",
        "lastname",
        "department",
        "usergroup",
        "guid"
      ],
      "properties": {
        "department": {
          "type": "string",
          "x-go-name": "Department",
          "example": "NOC"
        },
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "firstname": {
          "type": "string",
          "x-go-name": "FirstName"
        },
        "guid": {
          "description": "should be a unique value representing user",
          "type": "string",
          "x-go-name": "GUID",
          "example": "e71771a2-1ea0-498f-8d27-391713e10664"
        },
        "lastname": {
          "type": "string",
          "x-go-name": "LastName"
        },
        "partid": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "PartId",
          "example": 10
        },
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "usergroup": {
          "type": "string",
          "x-go-name": "UserGroup",
          "example": "admin"
        },
        "username": {
          "type": "string",
          "x-go-name": "UserName"
        }
      },
      "x-go-name": "TableUser",
      "x-go-package": "github.com/sipcapture/homer-app/model"
    },
    "DashboardElements": {
      "type": "object",
      "properties": {
        "cssclass": {
          "type": "string",
          "x-go-name": "CssClass"
        },
        "href": {
          "type": "string",
          "x-go-name": "Href"
        },
        "id": {
          "type": "string",
          "x-go-name": "Id"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "param": {
          "type": "string",
          "x-go-name": "Param"
        },
        "shared": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Shared"
        },
        "type": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Type"
        },
        "weight": {
          "type": "number",
          "format": "double",
          "x-go-name": "Weight"
        }
      },
      "x-go-name": "DashBoardElement",
      "x-go-package": "github.com/sipcapture/homer-app/model"
    },
    "FailureResponse": {
      "type": "object",
      "properties": {
        "error": {
          "description": "errot",
          "type": "string",
          "x-go-name": "Error"
        },
        "message": {
          "description": "message",
          "type": "string",
          "x-go-name": "Message"
        },
        "statuscode": {
          "description": "statuscode",
          "type": "integer",
          "format": "int64",
          "x-go-name": "StatusCode"
        }
      },
      "x-go-name": "UserTokenBadResponse",
      "x-go-package": "github.com/sipcapture/homer-app/model"
    },
    "GlobalSettingsStruct": {
      "type": "object",
      "required": [
        "guid",
        "partid",
        "category",
        "param"
      ],
      "properties": {
        "category": {
          "type": "string",
          "x-go-name": "Category",
          "example": "profile"
        },
        "data": {
          "$ref": "#/definitions/RawMessage"
        },
        "guid": {
          "description": "should be a unique value representing user",
          "type": "string",
          "x-go-name": "GUID",
          "example": "e71771a2-1ea0-498f-8d27-391713e10664"
        },
        "param": {
          "type": "string",
          "x-go-name": "Param",
          "example": "homer"
        },
        "partid": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "PartId",
          "example": 1
        }
      },
      "x-go-name": "TableGlobalSettings",
      "x-go-package": "github.com/sipcapture/homer-app/model"
    },
    "Hepsubchema": {
      "type": "object",
      "properties": {
        "guid": {
          "type": "string",
          "x-go-name": "GUID"
        },
        "hep_alias": {
          "type": "string",
          "x-go-name": "HepAlias"
        },
        "hepid": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Hepid"
        },
        "mapping": {
          "$ref": "#/definitions/RawMessage"
        },
        "profile": {
          "type": "string",
          "x-go-name": "Profile"
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Version"
        }
      },
      "x-go-name": "TableHepsubSchema",
      "x-go-package": "github.com/sipcapture/homer-app/model"
    },
    "LabelData": {
      "type": "object",
      "properties": {
        "__name__": {
          "type": "string",
          "x-go-name": "Name"
        },
        "instance": {
          "type": "string",
          "x-go-name": "Instance"
        },
        "job": {
          "type": "string",
          "x-go-name": "Job"
        }
      },
      "x-go-name": "ValuesArray",
      "x-go-package": "github.com/sipcapture/homer-app/data/service"
    },
    "ListUsers": {
      "type": "object",
      "properties": {
        "count": {
          "description": "count",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Count"
        },
        "data": {
          "description": "the data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateUserStruct"
          },
          "x-go-name": "Data"
        }
      },
      "x-go-name": "GetUser",
      "x-go-package": "github.com/sipcapture/homer-app/model"
    },
    "MappingSchema": {
      "type": "object",
      "properties": {
        "correlation_mapping": {
          "$ref": "#/definitions/RawMessage"
        },
        "create_index": {
          "$ref": "#/definitions/RawMessage"
        },
        "create_table": {
          "type": "string",
          "x-go-name": "CreateTable"
        },
        "fields_mapping": {
          "$ref": "#/definitions/RawMessage"
        },
        "fields_settings": {
          "$ref": "#/definitions/RawMessage"
        },
        "guid": {
          "type": "string",
          "x-go-name": "GUID"
        },
        "hep_alias": {
          "type": "string",
          "x-go-name": "HepAlias"
        },
        "hepid": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Hepid"
        },
        "partid": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "PartID"
        },
        "partition_step": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "PartitionStep"
        },
        "profile": {
          "type": "string",
          "x-go-name": "Profile"
        },
        "retention": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Retention"
        },
        "schema_mapping": {
          "$ref": "#/definitions/RawMessage"
        },
        "schema_settings": {
          "$ref": "#/definitions/RawMessage"
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Version"
        }
      },
      "x-go-name": "TableMappingSchema",
      "x-go-package": "github.com/sipcapture/homer-app/model"
    },
    "RawMessage": {
      "description": "It implements Marshaler and Unmarshaler and can\nbe used to delay JSON decoding or precompute a JSON encoding.",
      "type": "array",
      "title": "RawMessage is a raw encoded JSON value.",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "encoding/json"
    },
    "SuccessResponse": {
      "type": "object",
      "properties": {
        "data": {
          "description": "count",
          "type": "string",
          "x-go-name": "Data"
        },
        "message": {
          "description": "the data",
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-name": "UserCreateSuccessfulResponse",
      "x-go-package": "github.com/sipcapture/homer-app/model"
    },
    "UserLogin": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string",
          "x-go-name": "Password",
          "example": "sipcapture"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username",
          "example": "admin"
        }
      },
      "x-go-name": "UserloginDetails",
      "x-go-package": "github.com/sipcapture/homer-app/model"
    },
    "UserLoginSuccessResponse": {
      "type": "object",
      "properties": {
        "scope": {
          "description": "the uuid",
          "type": "string",
          "x-go-name": "Scope"
        },
        "token": {
          "description": "the token",
          "type": "string",
          "x-go-name": "Token"
        },
        "user": {
          "description": "the uuid",
          "type": "object",
          "properties": {
            "admin": {
              "type": "boolean",
              "x-go-name": "Admin"
            }
          },
          "x-go-name": "User"
        }
      },
      "x-go-name": "UserTokenSuccessfulResponse",
      "x-go-package": "github.com/sipcapture/homer-app/model"
    },
    "UserSettings": {
      "type": "object",
      "required": [
        "guid",
        "username",
        "partid",
        "category",
        "param"
      ],
      "properties": {
        "category": {
          "type": "string",
          "x-go-name": "Category",
          "example": "profile"
        },
        "data": {
          "$ref": "#/definitions/RawMessage"
        },
        "guid": {
          "description": "should be a unique value representing user",
          "type": "string",
          "x-go-name": "GUID",
          "example": "e71771a2-1ea0-498f-8d27-391713e10664"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "param": {
          "type": "string",
          "x-go-name": "Param",
          "example": "homer"
        },
        "partid": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "PartId",
          "example": 10
        },
        "username": {
          "type": "string",
          "x-go-name": "UserName"
        }
      },
      "x-go-name": "TableUserSettings",
      "x-go-package": "github.com/sipcapture/homer-app/model"
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}